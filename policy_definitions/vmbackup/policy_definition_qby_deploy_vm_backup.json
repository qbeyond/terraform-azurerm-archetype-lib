{
  "name": "QBY-Deploy-VM-Backup",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Configure backup on virtual machines with a given tag to a new recovery services vault with a default policy",
    "policyType": "Custom",
    "mode": "Indexed",
    "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupIncludeTag.",
    "metadata": {
      "version": "1.0.0",
      "category": "Backup"
    },
    "parameters": {
      "location": {
        "type": "string",
        "metadata": {
          "displayName": "Location",
          "description": "Azure region to deploy the RSV and it's RG in"
        },
        "defaultValue": "westeurope"
      },
      "exclusionTagName": {
        "type": "String",
        "metadata": {
          "displayName": "Exclusion Tag Name",
          "description": "Name of the tag to use for excluding VMs in the scope of this policy. This should be used along with the Exclusion Tag Value parameter."
        },
        "defaultValue": "VMBackup"
      },
      "exclusionTagValue": {
        "type": "String",
        "metadata": {
          "displayName": "Exclusion Tag Values",
          "description": "Value of the tag to use for excluding VMs in the scope of this policy. This should be used along with the Exclusion Tag Name parameter."
        },
        "defaultValue": "Disabled"
      },
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        },
        "allowedValues": [
          "auditIfNotExists",
          "AuditIfNotExists",
          "deployIfNotExists",
          "DeployIfNotExists",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists"
      },
      "backupPolicyLogicalName": {
        "type": "string",
        "metadata": {
          "displayName": "Backup Policy Logical Name",
          "description": "Logical name of the custom backup policy that will be used (PascalCase). If empty, the activeBackupPolicy parameter is being used"
        },
        "defaultValue": ""
      },
      "rgLogicalNameOverride": {
        "type": "string",
        "metadata": {
          "displayName": "RG Logical Name Override",
          "description": "Logical name of the RG for the RSV. Defaults to <SubscriptionLogicalName>Backup"
        },
        "defaultValue": ""
      },
      "activeBackupPolicy": {
        "type": "string",
        "metadata": {
          "displayName": "Active backup policy",
          "description": "Which of the 3 possible backup policies should be used. Either on of azures default policies or QbyDefault"
        },
        "allowedValues": [
          "DefaultPolicy",
          "EnhancedPolicy",
          "QbyDefault",
          "BackupPolicyDefaultLS"
        ],
        "defaultValue": "QbyDefault"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Compute/virtualMachines"
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notEquals": "azureopenshift"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notEquals": "AzureDatabricks"
          },
          {
            "field": "[concat('tags[', parameters('exclusionTagName'), ']')]",
            "notEquals": "[parameters('exclusionTagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.RecoveryServices/backupprotecteditems",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
            "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b",
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "DeploymentScope": "Subscription",
          "deployment": {
            "location": "westeurope",
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "vmName": {
                    "type": "string",
                    "metadata": {
                      "description": "Name of Azure Virtual Machines"
                    }
                  },
                  "vmRgName": {
                    "type": "string",
                    "metadata": {
                      "description": "Resource group containing the virtual machines."
                    }
                  },
                  "location": {
                    "type": "string",
                    "metadata": {
                      "description": "Location for VM and Backup vault"
                    }
                  },
                  "backupPolicyLogicalName": {
                    "type": "string",
                    "metadata": {
                      "description": "Logical name of the custom backup policy that will be used (PascalCase). If empty, the activeBackupPolicy parameter is being used"
                    },
                    "defaultValue": ""
                  },
                  "rgLogicalNameOverride": {
                    "type": "string",
                    "metadata": {
                      "description": "Logical name of the RG for the RSV. Defaults to <SubscriptionLogicalName>Backup"
                    },
                    "defaultValue": ""
                  },
                  "activeBackupPolicy": {
                    "type": "string",
                    "metadata": {
                      "description": "Which of the 3 possible backup policies should be used. Either on of azures default policies or QbyDefault"
                    },
                    "allowedValues": [
                      "DefaultPolicy",
                      "EnhancedPolicy",
                      "QbyDefault",
                      "BackupPolicyDefaultLS"
                    ],
                    "defaultValue": "QbyDefault"
                  }
                },
                "variables": {
                  "backupFabric": "Azure",
                  "azurePolicies": [
                    "DefaultPolicy",
                    "EnhancedPolicy"
                  ],
                  "backupPolicyLogicalName": "[if(equals(parameters('backupPolicyLogicalName'), ''), parameters('activeBackupPolicy'), parameters('backupPolicyLogicalName'))]",
                  "backupPolicy": "[concat('bkpol-', variables('backupPolicyLogicalName'), '-vm')]",
                  "activeBackupPolicy": "[if(contains(variables('azurePolicies'), parameters('activeBackupPolicy')), parameters('activeBackupPolicy'), variables('backupPolicy'))]",
                  "v2VmType": "Microsoft.Compute/virtualMachines",
                  "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                  "v2Vm": "vm;iaasvmcontainerv2;",
                  "vaultName": "[concat('rsv-',split(subscription().displayName,'-')[1],'-01-',parameters('location'))]",
                  "rgName": "[concat('rg-',if(equals(parameters('rgLogicalNameOverride'), ''), split(subscription().displayName,'-')[1], parameters('rgLogicalNameOverride')),'Backup-', split(subscription().displayName,'-')[0],'-01')]"
                },
                "resources": [
                  {
                    "type": "Microsoft.Resources/resourceGroups",
                    "apiVersion": "2021-04-01",
                    "name": "[variables('rgName')]",
                    "location": "[parameters('location')]",
                    "properties": {}
                  },
                  {
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2021-04-01",
                    "name": "[concat('NestedPolicyDeployment-', uniqueString(deployment().name))]",
                    "resourceGroup": "[variables('rgName')]",
                    "dependsOn": [
                      "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('rgName'))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {},
                        "variables": {},
                        "resources": [
                          {
                            "name": "[variables('vaultName')]",
                            "type": "Microsoft.RecoveryServices/vaults",
                            "apiVersion": "2016-06-01",
                            "location": "[parameters('location')]",
                            "properties": {},
                            "sku": {
                              "name": "Standard"
                            }
                          },
                          {
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                            "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                            "apiVersion": "2016-12-01",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                              "[resourceId(subscription().subscriptionId, variables('rgName'), 'Microsoft.RecoveryServices/vaults/', variables('vaultName'))]",
                              "[concat(resourceId(subscription().subscriptionId, variables('rgName'), 'Microsoft.RecoveryServices/vaults/', variables('vaultName')), '/backupPolicies/', variables('backupPolicy'))]"
                            ],
                            "properties": {
                              "protectedItemType": "[variables('v2VmType')]",
                              "policyId": "[resourceId(subscription().subscriptionId, variables('rgName'), 'Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('activeBackupPolicy'))]",
                              "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                            }
                          },
                          {
                            "condition": "[equals(parameters('activeBackupPolicy'), 'BackupPolicyDefaultLS')]",
                            "name": "[concat(variables('vaultName'), '/', variables('backupPolicy'))]",
                            "apiVersion": "2021-12-01",
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                              "[resourceId(subscription().subscriptionId, variables('rgName'), 'Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                            ],
                            "properties": {
                              "backupManagementType": "AzureIaasVM",
                              "policyType": "V2",
                              "instantRpRetentionRangeInDays": "1",
                              "schedulePolicy": {
                                "schedulePolicyType": "SimpleSchedulePolicyV2",
                                "scheduleRunFrequency": "Daily",
                                "hourlySchedule": null,
                                "dailySchedule": {
                                  "scheduleRunTimes": [
                                    "2025-07-04T03:00:00.000Z"
                                  ]
                                },
                                "weeklySchedule": null
                              },
                              "timeZone": "W. Europe Standard Time",
                              "retentionPolicy": {
                                "retentionPolicyType": "LongTermRetentionPolicy",
                                "dailySchedule": {
                                  "retentionTimes": [
                                    "2025-07-04T03:00:00.000Z"
                                  ],
                                  "retentionDuration": {
                                    "count": 14,
                                    "durationType": "Days"
                                  }
                                },
                                "weeklySchedule": {
                                  "daysOfTheWeek": [
                                    "Sunday"
                                  ],
                                  "retentionTimes": [
                                    "2025-07-04T03:00:00.000Z"
                                  ],
                                  "retentionDuration": {
                                    "count": 1,
                                    "durationType": "Weeks"
                                  }
                                },
                                "monthlySchedule": null,
                                "yearlySchedule": null
                              },
                              "instantRPDetails": {
                                "azureBackupRGNamePrefix": "[take(variables('rgName'), sub(length(variables('rgName')), 1))]"
                              },
                              "tieringPolicy": {
                                "ArchivedRP": {
                                  "tieringMode": "DoNotTier"
                                }
                              }
                            }
                          },
                          {
                            "condition": "[equals(parameters('activeBackupPolicy'), 'QbyDefault')]",
                            "name": "[concat(variables('vaultName'), '/', variables('backupPolicy'))]",
                            "apiVersion": "2021-12-01",
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                              "[resourceId(subscription().subscriptionId, variables('rgName'), 'Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                            ],
                            "properties": {
                              "backupManagementType": "AzureIaasVM",
                              "policyType": "V2",
                              "instantRPDetails": {
                                "azureBackupRGNamePrefix": "[take(variables('rgName'), sub(length(variables('rgName')), 1))]"
                              },
                              "schedulePolicy": {
                                "schedulePolicyType": "SimpleSchedulePolicyV2",
                                "scheduleRunFrequency": "Hourly",
                                "hourlySchedule": {
                                  "interval": 4,
                                  "scheduleWindowStartTime": "2023-03-20T00:30:00Z",
                                  "scheduleWindowDuration": 24
                                }
                              },
                              "retentionPolicy": {
                                "retentionPolicyType": "LongTermRetentionPolicy",
                                "dailySchedule": {
                                  "retentionTimes": [
                                    "2023-03-20T00:30:00Z"
                                  ],
                                  "retentionDuration": {
                                    "count": 7,
                                    "durationType": "Days"
                                  }
                                },
                                "weeklySchedule": {
                                  "daysOfTheWeek": [
                                    "Monday"
                                  ],
                                  "retentionTimes": [
                                    "2023-03-20T00:30:00Z"
                                  ],
                                  "retentionDuration": {
                                    "count": 4,
                                    "durationType": "Weeks"
                                  }
                                }
                              },
                              "tieringPolicy": {
                                "ArchivedRP": {
                                  "tieringMode": "DoNotTier",
                                  "duration": 0,
                                  "durationType": "Invalid"
                                }
                              },
                              "instantRpRetentionRangeInDays": 6,
                              "timeZone": "UTC",
                              "protectedItemsCount": 0
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                ],
                "outputs": {}
              },
              "parameters": {
                "vmName": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[parameters('location')]"
                },
                "vmRgName": {
                  "value": "[resourceGroup().name]"
                },
                "backupPolicyLogicalName": {
                  "value": "[parameters('backupPolicyLogicalName')]"
                },
                "rgLogicalNameOverride": {
                  "value": "[parameters('rgLogicalNameOverride')]"
                },
                "activeBackupPolicy": {
                  "value": "[parameters('activeBackupPolicy')]"
                }
              }
            }
          }
        }
      }
    }
  }
}
